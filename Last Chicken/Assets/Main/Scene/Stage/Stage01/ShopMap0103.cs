using Custom;
using System.Collections.Generic;
using UnityEngine;
using TerrainEngine2D;

public class ShopMap0103 : EventMap
{
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    #region[Awake]
    public override void Awake()
    {
        base.Awake();


        List<Texture2D> variation = new List<Texture2D>();
        for (int i = 0; i < 5; i++)
        {
            Texture2D temp = Resources.Load("TerrainData/ShopMap0103/Variation" + i) as Texture2D;
            variation.Add(temp);
        }
        int r = Random.Range(0, variation.Count);
        GroundManager.instance.eventMapData = variation[r];
        GroundManager.instance.eventMapBackData = CreateData(GroundManager.instance.eventMapData.width, GroundManager.instance.eventMapData.height);

        switch (r)
        {
            case 0:
                EventMapSetting(ExitDic.왼쪽, -1);
                break;
            case 1:
                EventMapSetting(ExitDic.오른쪽, 1);
                break;
            case 2:
                EventMapSetting(ExitDic.오른쪽, 1);
                break;
            case 3:
                EventMapSetting(ExitDic.오른쪽, 1);
                break;
            case 4:
                EventMapSetting(ExitDic.왼쪽, 1);
                break;
        }
    }
    #endregion

    #region[GenerateData]
    public override void GenerateData()
    {
        base.GenerateData();

        SetGround();
        SetBackGround();
        SetFluidOutline();
        SetObject();
        GenerateBackGround();
        GenerateGround();

        GroundManager.instance.Init(world);
    }
    #endregion

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
